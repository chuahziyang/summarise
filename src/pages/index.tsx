import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import axios from "axios";
import { trpc } from "../utils/trpc";
import { useState } from "react";

const Home: NextPage = () => {
  const presignedUrl = trpc.aws.getPreSignedUrl.useQuery(undefined, {
    staleTime: Infinity,
  });
  const logURL = trpc.aws.logURL.useMutation();
  // const testTranscription = trpc.openai.test.useQuery(undefined, {
  //   staleTime: Infinity,
  // });
  const [file, setfile] = useState(null);

  const handleChange = (e) => {
    setfile(e.target.files[0]);
  };

  const signIn = async () => {
    const key =
      presignedUrl.data?.Key ||
      ((() => {
        alert("ERROR Didn't get a key");
        return "Error";
      })() as string);

    console.log(key);

    console.log(file);

    // const response = await axios.put(presignedUrl.data.url, file);
    // console.log(response);

    // const response2 = await logURL.mutateAsync(presignedUrl.data?.Key);
    // console.log(response2);
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen  flex-col  items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
          </h1>
          <h1 className="text-white">
            {presignedUrl.data ? presignedUrl.data.url : "AWAITING"}
          </h1>
          {/* <h1 className="text-white">{testTranscription.data}</h1> */}
          <div className="flex flex-col items-center gap-2">
            <input type="file" onChange={(e) => handleChange(e)} />

            {/* <p className="text-2xl text-white">
              {hello.data ? hello.data?.summary : "Loading tRPC query..."}
            </p> */}
            {/* <p className="text-2xl text-white">
              {hello.data ? hello.data?.transcription : "Loading tRPC query..."}
            </p> */}
            <div className="flex flex-col items-center justify-center gap-4">
              <button
                className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
                onClick={signIn}
              >
                Send File
              </button>
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
